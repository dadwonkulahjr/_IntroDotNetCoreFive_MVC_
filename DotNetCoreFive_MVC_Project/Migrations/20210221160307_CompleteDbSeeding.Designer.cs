// <auto-generated />
using DotNetCoreFive_MVC_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetCoreFive_MVC_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210221160307_CompleteDbSeeding")]
    partial class CompleteDbSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetCoreFive_MVC_Project.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Customer ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Agent")
                        .HasColumnType("int")
                        .HasColumnName("Customer Agent");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Customer Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Customer Name");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Agent = 3,
                            Email = "tom@t.com",
                            Name = "Tom"
                        },
                        new
                        {
                            ID = 2,
                            Agent = 1,
                            Email = "mike@m.com",
                            Name = "Mike"
                        },
                        new
                        {
                            ID = 3,
                            Agent = 4,
                            Email = "princess@p.com",
                            Name = "Princess"
                        },
                        new
                        {
                            ID = 4,
                            Agent = 2,
                            Email = "sharon@s.com",
                            Name = "Sharon"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
